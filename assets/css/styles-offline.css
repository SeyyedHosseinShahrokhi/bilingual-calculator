/* ==========================================================================
   2. Modern CSS Reset & Base Styles
   ========================================================================== */
html {
    /* Respect user's browser font-size setting as the base */
    font-size: 100%;
}

body {
    background-color: var(--bg-color);
    color: var(--text-color);
    display: grid;
    place-items: center;
    min-height: 100dvh; /* Use dynamic viewport height for mobile browsers */
    padding: 1rem;
}

/* ==========================================================================
   3. Component: Offline Page Layout
   ========================================================================== */
.offline-page {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    gap: clamp(1rem, 4dvh, 1.5rem); /* Fluid gap based on viewport height */
    width: clamp(280px, 90vw, 450px); /* Adaptive width for all screens */
}

.offline-page__animation {
    width: clamp(100px, 25vw, 120px); /* Adaptive animation size */
    height: auto;
    aspect-ratio: 1 / 1;
    margin-bottom: 1rem;
}

.offline-page__title {
    /* Fluid typography: scales smoothly from 1.5rem to 2rem */
    font-size: clamp(1.5rem, 5vw + 0.5rem, 2rem);
    line-height: 1.4;
}

.offline-page__text {
    /* Fluid typography: scales smoothly from 0.9rem to 1rem */
    font-size: clamp(0.9rem, 2vw + 0.5rem, 1rem);
    color: var(--text-color-secondary);
    line-height: 1.6;
    max-width: 35ch; /* Limit line length for better readability */
}

.offline-page__cta {
    margin-top: 1rem;
}

/* ==========================================================================
   4. Component: Reusable Button
   ========================================================================== */
.button {
    background-color: var(--accent-color);
    color: var(--background-color);
    border: none;
    border-radius: 12px;
    padding: 0.9rem 2rem;
    font-size: 1rem;
    font-weight: bold;
    cursor: pointer;
    transition: background-color 0.2s ease, transform 0.1s ease;
}

.button:hover {
    background-color: var(--accent-hover-color);
}

.button:active {
    transform: scale(0.98);
}

/* ==========================================================================
   5. Component: Fun Fact Card
   ========================================================================== */
.fun-fact {
    background-color: var(--surface-color);
    border-radius: 12px;
    padding: 1rem 1.5rem;
    margin-top: 1.5rem;
    text-align: right;
    display: flex;
    align-items: flex-start;
    gap: 1rem;
    border: 1px solid rgba(255, 255, 255, 0.1);
}

.fun-fact__icon {
    font-size: 1.5rem;
    padding-top: 0.25rem;
}

.fun-fact__text {
    font-size: 0.9rem;
    color: var(--text-color-secondary);
    line-height: 1.7;
}

.fun-fact__text strong {
    color: var(--text-color);
    display: block;
    margin-bottom: 0.25rem;
}

/* ==========================================================================
   6. Component: Toast Notification
   ========================================================================== */
.toast {
    position: fixed;
    bottom: 20px;
    left: 50%;
    transform: translate(-50%, 150%);
    background-color: var(--surface-color);
    color: var(--text-color);
    padding: 1rem 1.5rem;
    border-radius: 8px;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
    transition: transform 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);
    z-index: 1000;
}

.toast--visible {
    transform: translate(-50%, 0);
}

/* ==========================================================================
   7. Animations & Accessibility
   ========================================================================== */
@keyframes float {
    0% { transform: translateY(0px); }
    50% { transform: translateY(-10px); }
    100% { transform: translateY(0px); }
}

@keyframes twinkle {
    0%, 100% { opacity: 0.5; }
    50% { opacity: 1; }
}

.robot-body {
    animation: float 4s ease-in-out infinite;
}

.star {
    animation: twinkle 3s ease-in-out infinite;
}

.star2 { animation-delay: 0.5s; }
.star3 { animation-delay: 1s; }

/* Respect user's preference for reduced motion */
@media (prefers-reduced-motion: reduce) {
    .robot-body, .star {
        animation: none;
    }
}